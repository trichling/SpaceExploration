<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="SpaceExploration.Game.Ui.styles.css" />
    <link rel="icon" type="image/png" href="favicon.png" />
      <script>

        window.draw = (state) => {
            clearCanvas();
            // get the text of the input field highligtedDroneId
            const highligtedDroneId = document.getElementById('highligtedDroneId').value;
            state.drones.forEach(drone => drawDrone(drone, highligtedDroneId));
            state.shots.forEach(shot => drawShot(shot));
        }

        window.clearCanvas = () => {
            const canvas = document.getElementById('gameCanvas');
            const context = canvas.getContext('2d');
            context.clearRect(0, 0, canvas.width, canvas.height);
        };

        window.drawDrone = (drone, highligtedDroneId) => {
            const x = drone.position.x * 800;
            const y = (1 - drone.position.y) * 600;
            const heading = drone.heading.radians;
            const canvas = document.getElementById('gameCanvas');
            const context = canvas.getContext('2d');
            context.save();
            context.translate(y, x);

            if (drone.droneId === highligtedDroneId) {
                context.fillStyle = 'green';
                context.scale(2, 2);
            }
            else {
                context.fillStyle = 'blue';
            }

            context.rotate(heading);
            context.beginPath();
            context.moveTo(0, 10);
            context.lineTo(5, -5);
            context.lineTo(-5, -5);
            context.closePath();
            context.fill();

            context.restore();

            @* context.font = '10px Arial';
            context.fillStyle = 'black';
            context.fillText(drone.droneName.substring(0, 10), -10, -10); *@

        };

        window.drawShot = (shot) => {
            const fromX = shot.shooter.position.x * 800;
            const fromY = (1 - shot.shooter.position.y) * 600;
            const toX = shot.target.position.x * 800;
            const toY = (1 - shot.target.position.y) * 600;
            const canvas = document.getElementById('gameCanvas');
            const context = canvas.getContext('2d');
            context.beginPath();
            context.moveTo(fromY, fromX);
            context.lineTo(toY, toX);
            context.strokeStyle = 'red';
            context.stroke();
        };

    </script>
    <HeadOutlet />
</head>

<body>
    <Routes />
    <script src="_framework/blazor.web.js"></script>
</body>

</html>
